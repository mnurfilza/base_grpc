// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.12
// source: shared/proto/test1.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// CarObjectClient is the client API for CarObject service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CarObjectClient interface {
	GetCar(ctx context.Context, in *CarRequest, opts ...grpc.CallOption) (*Car, error)
}

type carObjectClient struct {
	cc grpc.ClientConnInterface
}

func NewCarObjectClient(cc grpc.ClientConnInterface) CarObjectClient {
	return &carObjectClient{cc}
}

func (c *carObjectClient) GetCar(ctx context.Context, in *CarRequest, opts ...grpc.CallOption) (*Car, error) {
	out := new(Car)
	err := c.cc.Invoke(ctx, "/proto.CarObject/GetCar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CarObjectServer is the server API for CarObject service.
// All implementations should embed UnimplementedCarObjectServer
// for forward compatibility
type CarObjectServer interface {
	GetCar(context.Context, *CarRequest) (*Car, error)
}

// UnimplementedCarObjectServer should be embedded to have forward compatible implementations.
type UnimplementedCarObjectServer struct {
}

func (UnimplementedCarObjectServer) GetCar(context.Context, *CarRequest) (*Car, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCar not implemented")
}

// UnsafeCarObjectServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CarObjectServer will
// result in compilation errors.
type UnsafeCarObjectServer interface {
	mustEmbedUnimplementedCarObjectServer()
}

func RegisterCarObjectServer(s grpc.ServiceRegistrar, srv CarObjectServer) {
	s.RegisterService(&CarObject_ServiceDesc, srv)
}

func _CarObject_GetCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarObjectServer).GetCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CarObject/GetCar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarObjectServer).GetCar(ctx, req.(*CarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CarObject_ServiceDesc is the grpc.ServiceDesc for CarObject service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CarObject_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "proto.CarObject",
	HandlerType: (*CarObjectServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCar",
			Handler:    _CarObject_GetCar_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shared/proto/test1.proto",
}
